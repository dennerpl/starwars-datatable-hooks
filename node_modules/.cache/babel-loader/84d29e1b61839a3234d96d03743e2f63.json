{"ast":null,"code":"var _jsxFileName = \"/home/denner/Documentos/WebDevelopment/trybe-projects/project-starwars-datatable-hooks/sd-07-project-starwars-datatable-hooks/src/context/Provider.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport StarWarsContext from './StarWarsContext';\nimport fetchPlanets from '../services/fetchPlanetsAPI';\n\nfunction Provider(props) {\n  const [data, setData] = useState([{\n    teste: 'só testando'\n  }]);\n  const [filters, setFilters] = useState({\n    filters: {\n      filterByName: {\n        name: ''\n      }\n    }\n  });\n  useEffect(() => {\n    fetchPlanets().then(response => setData(response.results));\n  }, []);\n\n  const handleTextChange = event => {\n    const {\n      target\n    } = event;\n    const {\n      value\n    } = target;\n    setFilters({ ...filters,\n      filterByName: {\n        name: value\n      }\n    });\n  };\n\n  const context = {\n    data,\n    filters,\n    handleTextChange\n  };\n  const {\n    children\n  } = props;\n  return /*#__PURE__*/React.createElement(StarWarsContext.Provider, {\n    value: context,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default Provider;","map":{"version":3,"sources":["/home/denner/Documentos/WebDevelopment/trybe-projects/project-starwars-datatable-hooks/sd-07-project-starwars-datatable-hooks/src/context/Provider.js"],"names":["React","useState","useEffect","PropTypes","StarWarsContext","fetchPlanets","Provider","props","data","setData","teste","filters","setFilters","filterByName","name","then","response","results","handleTextChange","event","target","value","context","children","propTypes","node","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,YAAP,MAAyB,6BAAzB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,CAAC;AAAES,IAAAA,KAAK,EAAE;AAAT,GAAD,CAAD,CAAhC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC;AACrCU,IAAAA,OAAO,EAAE;AACPE,MAAAA,YAAY,EAAE;AACZC,QAAAA,IAAI,EAAE;AADM;AADP;AAD4B,GAAD,CAAtC;AAOAZ,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,YAAY,GAAGU,IAAf,CAAqBC,QAAD,IAAcP,OAAO,CAACO,QAAQ,CAACC,OAAV,CAAzC;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAClC,UAAM;AAAEC,MAAAA;AAAF,QAAaD,KAAnB;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAYD,MAAlB;AACAR,IAAAA,UAAU,CAAC,EACT,GAAGD,OADM;AAETE,MAAAA,YAAY,EAAE;AACZC,QAAAA,IAAI,EAAEO;AADM;AAFL,KAAD,CAAV;AAMD,GATD;;AAWA,QAAMC,OAAO,GAAG;AACdd,IAAAA,IADc;AAEdG,IAAAA,OAFc;AAGdO,IAAAA;AAHc,GAAhB;AAKA,QAAM;AAAEK,IAAAA;AAAF,MAAehB,KAArB;AACA,sBACE,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAGe,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,QADH,CADF;AAKD;;AAEDjB,QAAQ,CAACkB,SAAT,GAAqB;AACnBD,EAAAA,QAAQ,EAAEpB,SAAS,CAACsB,IAAV,CAAeC;AADN,CAArB;AAIA,eAAepB,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport StarWarsContext from './StarWarsContext';\nimport fetchPlanets from '../services/fetchPlanetsAPI';\n\nfunction Provider(props) {\n  const [data, setData] = useState([{ teste: 'só testando' }]);\n  const [filters, setFilters] = useState({\n    filters: {\n      filterByName: {\n        name: '',\n      },\n    },\n  });\n  useEffect(() => {\n    fetchPlanets().then((response) => setData(response.results));\n  }, []);\n\n  const handleTextChange = (event) => {\n    const { target } = event;\n    const { value } = target;\n    setFilters({\n      ...filters,\n      filterByName: {\n        name: value,\n      },\n    });\n  };\n\n  const context = {\n    data,\n    filters,\n    handleTextChange,\n  };\n  const { children } = props;\n  return (\n    <StarWarsContext.Provider value={ context }>\n      {children}\n    </StarWarsContext.Provider>\n  );\n}\n\nProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Provider;\n"]},"metadata":{},"sourceType":"module"}